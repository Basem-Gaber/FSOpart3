{"version":3,"sources":["services/persons.js","components/Filter.js","components/Persons.js","components/PersonForm.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Filter","value","setter","onChange","event","console","log","target","Person","person","deletePerson","name","number","onClick","Persons","persons","newInput","setPersons","setMessage","setColorToggle","personsToShow","filter","toLowerCase","includes","map","key","window","confirm","find","temp","personService","then","response","setTimeout","PersonForm","newName","newNumber","personsSetter","nameSetter","numberSetter","onSubmit","preventDefault","i","bool","alert","data","catch","error","personObject","concat","type","Notification","message","colorToggle","messageStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","style","ReactDOM","render","useState","setNewName","setNewNumber","setNewInput","useEffect","document","getElementById"],"mappings":"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","file":"static/js/main.116c469d.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteAxios = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\nexport default { getAll, create, update, deleteAxios }","import React from 'react'\r\n\r\nconst Filter = ({ value, setter }) => {\r\n    const handleInputChange = (event) => {\r\n        console.log(event.target.value)\r\n        setter(event.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            filter shown with <input value={value} onChange={handleInputChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Filter","import React from 'react'\r\nimport personService from './../services/persons'\r\n\r\nconst Persons = ({ persons, newInput, setPersons, setMessage, setColorToggle }) => {\r\n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newInput.toLowerCase()))\r\n\r\n    const deletePerson = id => {\r\n        const result = window.confirm(`Delete ${persons.find(person => person.id === id).name} ?`)\r\n        if (result) {\r\n            const temp = persons.find(person => person.id === id).name\r\n            personService.deleteAxios(id).then(response => {\r\n                setPersons(persons.filter(person => person.id !== id))\r\n            })\r\n            setColorToggle(true)\r\n            setMessage(\r\n                `Removed '${temp}'`\r\n            )\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            }, 10000)\r\n        }\r\n    }\r\n\r\n    const rows = () => personsToShow.map(person =>\r\n            <Person\r\n                key={person.name}\r\n            person = {person}\r\n            deletePerson = {() => deletePerson(person.id)}\r\n        />\r\n    )\r\n    return (\r\n        <div>\r\n            {rows()}\r\n        </div>\r\n    )\r\n}\r\nconst Person = ({ person, deletePerson }) => {\r\n    console.log(person)\r\n    return (\r\n        <div>\r\n            {person.name} {person.number}\r\n            <button onClick={deletePerson}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Persons","import React from 'react'\r\nimport personService from './../services/persons'\r\n\r\n\r\nconst PersonForm = ({ persons, newName, newNumber, personsSetter, nameSetter, numberSetter, setMessage, setColorToggle }) => {\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        console.log('button clicked', event.target)\r\n        let bool = false\r\n        let i\r\n        for (i in persons) {\r\n            console.log(`now name is ${persons[i].name}`)\r\n            if (persons[i].name === newName) {\r\n                if (persons[i].number === newNumber) {\r\n                    alert(`${newName} is already added to phonebook`)\r\n                }\r\n                else {\r\n                    const result = window.confirm(`${persons[i].name} is already added to the phonebook, replace old number with new one ?`)\r\n                    if (result) {\r\n                        console.log(persons[i].id)\r\n                        personService\r\n                            .update(persons[i].id, {\r\n                                name: newName,\r\n                                number: newNumber\r\n                            })\r\n                            .then(response => {\r\n                                personsSetter(persons.map(person => person.name !== newName ? person : response.data))        \r\n                                setColorToggle(true)\r\n                                setMessage(\r\n                                    `Updated number of '${persons[i].name}'`\r\n                                )\r\n                                setTimeout(() => {\r\n                                    setMessage(null)\r\n                                }, 10000)\r\n                            })\r\n                            .catch(error => {\r\n                                setColorToggle(false)\r\n                                setMessage(\r\n                                    `Information of '${persons[i].name}' has already been removed from the server.`\r\n                                )\r\n                                setTimeout(() => {\r\n                                    setMessage(null)\r\n                                }, 10000)\r\n                            })\r\n                    }\r\n                }\r\n                bool = true\r\n                break\r\n            }\r\n        }\r\n        if (!bool) {\r\n            const personObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personService\r\n                .create(personObject)\r\n                .then(response => {\r\n                    personsSetter(persons.concat(response.data))\r\n                    nameSetter('')\r\n                    numberSetter('')\r\n                })\r\n            setColorToggle(true)\r\n            setMessage(\r\n                `Added '${personObject.name}'`\r\n            )\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            }, 10000)\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        console.log(event.target.value)\r\n        nameSetter(event.target.value)\r\n    }\r\n    const handleNumberChange = (event) => {\r\n        console.log(event.target.value)\r\n        numberSetter(event.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={addPerson}>\r\n                <div>name: <input value={newName} onChange={handleNameChange} /></div>\r\n                <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n                <div><button type=\"submit\">add</button></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport ReactDOM from 'react-dom'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newInput, setNewInput] = useState('')\n  //const [showAll, setShowAll] = useState(true)\n  const [message, setMessage] = useState('')\n  const [colorToggle, setColorToggle] = useState(true)\n\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} colorToggle={colorToggle} setColorToggle={setColorToggle} />\n      <Filter value={newInput} setter={setNewInput} />\n      <h3>add a new</h3>\n      <PersonForm persons={persons} newName={newName} newNumber={newNumber} personsSetter={setPersons} nameSetter={setNewName} numberSetter={setNewNumber} setMessage={setMessage} setColorToggle={setColorToggle} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} newInput={newInput} setPersons={setPersons} setMessage={setMessage} setColorToggle={setColorToggle} />\n    </div>\n  )\n}\nconst Notification = ({ message, colorToggle, setColorToggle }) => {\n  const messageStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  const errorStyle = {\n    ...messageStyle,\n    color: 'red'\n  }\n\n  if (message === null) {\n    return null\n  }\n  if (colorToggle === false) {\n    console.log(\"yes is false\")\n    return (\n      <div style={errorStyle}>\n        {message}\n      </div>\n    )\n  }\n  else {\n    return (\n      <div style={messageStyle}>\n        {message}\n      </div>\n    )\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}