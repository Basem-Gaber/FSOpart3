{"version":3,"sources":["services/persons.js","components/Filter.js","components/Persons.js","components/PersonForm.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","console","log","put","delete","Filter","value","setter","onChange","event","target","Person","person","deletePerson","name","number","onClick","Persons","persons","newInput","setPersons","setMessage","setColorToggle","personsToShow","filter","toLowerCase","includes","map","key","window","confirm","find","temp","personService","then","response","setTimeout","catch","error","data","PersonForm","newName","newNumber","personsSetter","nameSetter","numberSetter","onSubmit","preventDefault","bool","existingPerson","alert","concat","type","Notification","message","colorToggle","messageStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","style","ReactDOM","render","useState","setNewName","setNewNumber","setNewInput","useEffect","document","getElementById"],"mappings":"0NAEMA,EAAU,eAmBD,EAjBA,WACb,OAAOC,IAAMC,IAAIF,IAgBJ,EAbA,SAAAG,GACb,OAAOF,IAAMG,KAAKJ,EAASG,IAYd,EATA,SAACE,EAAIF,GAElB,OADAG,QAAQC,IAAIF,GACLJ,IAAMO,IAAN,UAAaR,EAAb,YAAwBK,GAAMF,IAOxB,EAJK,SAACE,GAEnB,OADAC,QAAQC,IAAIF,GACLJ,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BK,K,iBCJrBK,EAbA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAKrB,OACI,kDACsB,2BAAOD,MAAOA,EAAOE,SANrB,SAACC,GACvBR,QAAQC,IAAIO,EAAMC,OAAOJ,OACzBC,EAAOE,EAAMC,OAAOJ,YCsCtBK,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAEtB,OADAZ,QAAQC,IAAIU,GAER,6BACKA,EAAOE,KADZ,IACmBF,EAAOG,OACtB,4BAAQC,QAASH,GAAjB,YAMGI,EAnDC,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,QAASC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eACpDC,EAAgBL,EAAQM,QAAO,SAAAZ,GAAM,OAAIA,EAAOE,KAAKW,cAAcC,SAASP,EAASM,kBAiC3F,OACI,6BAReF,EAAcI,KAAI,SAAAf,GAAM,OACvC,kBAAC,EAAD,CACIgB,IAAKhB,EAAOE,KACZF,OAAQA,EACRC,aAAc,kBA5BD,SAAAb,GAEjB,GADe6B,OAAOC,QAAP,iBAAyBZ,EAAQa,MAAK,SAAAnB,GAAM,OAAIA,EAAOZ,KAAOA,KAAIc,KAAlE,OACH,CACR,IAAMkB,EAAOd,EAAQa,MAAK,SAAAnB,GAAM,OAAIA,EAAOZ,KAAOA,KAAIc,KACtDmB,EAA0BjC,GAAIkC,MAAK,SAAAC,GAC/Bf,EAAWF,EAAQM,QAAO,SAAAZ,GAAM,OAAIA,EAAOZ,KAAOA,MAClDsB,GAAe,GACfD,EAAW,YAAD,OACMW,EADN,MAGVI,YAAW,WACPf,EAAW,QACZ,QACJgB,OAAM,SAAAC,GACLhB,GAAe,GACfD,EAAWiB,EAAMH,SAASI,MAC1BH,YAAW,WACPf,EAAW,QACZ,KACHpB,QAAQC,IAAIoC,EAAMH,SAASI,UASX1B,CAAaD,EAAOZ,YCsErCwC,EApGI,SAAC,GAA0G,IAAxGtB,EAAuG,EAAvGA,QAASuB,EAA8F,EAA9FA,QAASC,EAAqF,EAArFA,UAAWC,EAA0E,EAA1EA,cAAeC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,aAAcxB,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eAwFpG,OACI,6BACI,0BAAMwB,SAzFI,SAACrC,GACfA,EAAMsC,iBACN9C,QAAQC,IAAI,iBAAkBO,EAAMC,QACpC,IAAIsC,GAAO,EAELC,EAAiB/B,EAAQa,MAAK,SAAAnB,GAAM,OAAIA,EAAOE,OAAS2B,MAC9DxC,QAAQC,IAAI+C,GACRA,KACIA,EAAelC,SAAW2B,GAC1BQ,MAAM,GAAD,OAAIT,EAAJ,mCACLO,GAAO,IAGQnB,OAAOC,QAAP,UAAkBmB,EAAenC,KAAjC,4EAEXb,QAAQC,IAAI+C,EAAenC,MAC3BmB,EACYgB,EAAejD,GAAI,CACvBc,KAAM2B,EACN1B,OAAQ2B,IAEXR,MAAK,SAAAC,GACFQ,EAAczB,EAAQS,KAAI,SAAAf,GAAM,OAAIA,EAAOE,OAAS2B,EAAU7B,EAASuB,EAASI,SAChFjB,GAAe,GACfD,EAAW,sBAAD,OACgB4B,EAAenC,KAD/B,MAGVsB,YAAW,WACPf,EAAW,QACZ,QAENgB,OAAM,SAAAC,GACHhB,GAAe,GACfD,EAAW,mBAAD,OACa4B,EAAenC,KAD5B,gDAGVsB,YAAW,WACPf,EAAW,QACZ,SAGf2B,GAAO,IAKVA,GAKDf,EAJqB,CACjBnB,KAAM2B,EACN1B,OAAQ2B,IAIPR,MAAK,SAAAC,GACFQ,EAAczB,EAAQiC,OAAOhB,EAASI,OACtCK,EAAW,IACXC,EAAa,IACbvB,GAAe,GACfD,EAAW,UAAD,OACIc,EAASI,KAAKzB,KADlB,MAGVsB,YAAW,WACPf,EAAW,QACZ,QAENgB,OAAM,SAAAC,GACHM,EAAW,IACXC,EAAa,IACbvB,GAAe,GACfD,EAAWiB,EAAMH,SAASI,MAC1BH,YAAW,WACPf,EAAW,QACZ,KACHpB,QAAQC,IAAIoC,EAAMH,SAASI,WAiB/B,sCAAW,2BAAOjC,MAAOmC,EAASjC,SAXrB,SAACC,GACtBR,QAAQC,IAAIO,EAAMC,OAAOJ,OACzBsC,EAAWnC,EAAMC,OAAOJ,WAUhB,wCAAa,2BAAOA,MAAOoC,EAAWlC,SARvB,SAACC,GACxBR,QAAQC,IAAIO,EAAMC,OAAOJ,OACzBuC,EAAapC,EAAMC,OAAOJ,WAOlB,6BAAK,4BAAQ8C,KAAK,UAAb,WCjDfC,G,MAAe,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,YACzBC,GAD2D,EAArBlC,eACvB,CACnBmC,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAEVC,EAAU,eACXR,EADW,CAEdC,MAAO,QAGT,OAAgB,OAAZH,EACK,MAEW,IAAhBC,GACFtD,QAAQC,IAAI,gBAEV,yBAAK+D,MAAOD,GACTV,IAMH,yBAAKW,MAAOT,GACTF,KAOTY,IAASC,OAAO,mBA5EJ,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTlD,EADS,KACAE,EADA,OAEcgD,mBAAS,IAFvB,mBAET3B,EAFS,KAEA4B,EAFA,OAGkBD,mBAAS,IAH3B,mBAGT1B,EAHS,KAGE4B,EAHF,OAIgBF,mBAAS,IAJzB,mBAITjD,EAJS,KAICoD,EAJD,OAMcH,mBAAS,IANvB,mBAMTd,EANS,KAMAjC,EANA,OAOsB+C,oBAAS,GAP/B,mBAOTb,EAPS,KAOIjC,EAPJ,KA4BhB,OAlBAkD,qBAAU,WACRvE,QAAQC,IAAI,UACZ+B,IAEGC,MAAK,SAAAC,GACJlC,QAAQC,IAAI,qBACZkB,EAAWe,EAASI,SAErBF,OAAM,SAAAC,GACLhB,GAAe,GACfD,EAAWiB,EAAMH,SAASI,MAC1BH,YAAW,WACTf,EAAW,QACV,KACHpB,QAAQC,IAAIoC,EAAMH,SAASI,WAE9B,IAGD,6BACE,yCACA,kBAAC,EAAD,CAAce,QAASA,EAASC,YAAaA,EAAajC,eAAgBA,IAC1E,kBAAC,EAAD,CAAQhB,MAAOa,EAAUZ,OAAQgE,IACjC,yCACA,kBAAC,EAAD,CAAYrD,QAASA,EAASuB,QAASA,EAASC,UAAWA,EAAWC,cAAevB,EAAYwB,WAAYyB,EAAYxB,aAAcyB,EAAcjD,WAAYA,EAAYC,eAAgBA,IAC7L,uCACA,kBAAC,EAAD,CAASJ,QAASA,EAASC,SAAUA,EAAUC,WAAYA,EAAYC,WAAYA,EAAYC,eAAgBA,OAwCrG,MAASmD,SAASC,eAAe,W","file":"static/js/main.40a8482f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  console.log(id)\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteAxios = (id) => {\r\n  console.log(id)\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\nexport default { getAll, create, update, deleteAxios }","import React from 'react'\r\n\r\nconst Filter = ({ value, setter }) => {\r\n    const handleInputChange = (event) => {\r\n        console.log(event.target.value)\r\n        setter(event.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            filter shown with <input value={value} onChange={handleInputChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Filter","import React from 'react'\r\nimport personService from './../services/persons'\r\n\r\nconst Persons = ({ persons, newInput, setPersons, setMessage, setColorToggle }) => {\r\n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newInput.toLowerCase()))\r\n\r\n    const deletePerson = id => {\r\n        const result = window.confirm(`Delete ${persons.find(person => person.id === id).name} ?`)\r\n        if (result) {\r\n            const temp = persons.find(person => person.id === id).name\r\n            personService.deleteAxios(id).then(response => {\r\n                setPersons(persons.filter(person => person.id !== id))\r\n                setColorToggle(true)\r\n                setMessage(\r\n                    `Removed '${temp}'`\r\n                )\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                }, 10000)\r\n            }).catch(error => {\r\n                setColorToggle(false)\r\n                setMessage(error.response.data)\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                }, 10000)\r\n                console.log(error.response.data)\r\n            })\r\n        }\r\n    }\r\n\r\n    const rows = () => personsToShow.map(person =>\r\n        <Person\r\n            key={person.name}\r\n            person={person}\r\n            deletePerson={() => deletePerson(person.id)}\r\n        />\r\n    )\r\n    return (\r\n        <div>\r\n            {rows()}\r\n        </div>\r\n    )\r\n}\r\nconst Person = ({ person, deletePerson }) => {\r\n    console.log(person)\r\n    return (\r\n        <div>\r\n            {person.name} {person.number}\r\n            <button onClick={deletePerson}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Persons","import React from 'react'\r\nimport personService from './../services/persons'\r\n\r\n\r\nconst PersonForm = ({ persons, newName, newNumber, personsSetter, nameSetter, numberSetter, setMessage, setColorToggle }) => {\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        console.log('button clicked', event.target)\r\n        let bool = false\r\n\r\n        const existingPerson = persons.find(person => person.name === newName)\r\n        console.log(existingPerson)\r\n        if (existingPerson) {\r\n            if (existingPerson.number === newNumber) {\r\n                alert(`${newName} is already added to phonebook`)\r\n                bool = true\r\n            }\r\n            else {\r\n                const result = window.confirm(`${existingPerson.name} is already added to the phonebook, replace old number with new one ?`)\r\n                if (result) {\r\n                    console.log(existingPerson.name)\r\n                    personService\r\n                        .update(existingPerson.id, {\r\n                            name: newName,\r\n                            number: newNumber\r\n                        })\r\n                        .then(response => {\r\n                            personsSetter(persons.map(person => person.name !== newName ? person : response.data))\r\n                            setColorToggle(true)\r\n                            setMessage(\r\n                                `Updated number of '${existingPerson.name}'`\r\n                            )\r\n                            setTimeout(() => {\r\n                                setMessage(null)\r\n                            }, 10000)\r\n                        })\r\n                        .catch(error => {\r\n                            setColorToggle(false)\r\n                            setMessage(\r\n                                `Information of '${existingPerson.name}' has already been removed from the server.`\r\n                            )\r\n                            setTimeout(() => {\r\n                                setMessage(null)\r\n                            }, 10000)\r\n                        })\r\n                }\r\n                bool = true\r\n            }\r\n        }\r\n\r\n\r\n        if (!bool) {\r\n            const personObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personService\r\n                .create(personObject)\r\n                .then(response => {\r\n                    personsSetter(persons.concat(response.data))\r\n                    nameSetter('')\r\n                    numberSetter('')\r\n                    setColorToggle(true)\r\n                    setMessage(\r\n                        `Added '${response.data.name}'`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 10000)\r\n                })\r\n                .catch(error => {\r\n                    nameSetter('')\r\n                    numberSetter('')\r\n                    setColorToggle(false)\r\n                    setMessage(error.response.data)\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 10000)\r\n                    console.log(error.response.data)\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        console.log(event.target.value)\r\n        nameSetter(event.target.value)\r\n    }\r\n    const handleNumberChange = (event) => {\r\n        console.log(event.target.value)\r\n        numberSetter(event.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={addPerson}>\r\n                <div>name: <input value={newName} onChange={handleNameChange} /></div>\r\n                <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n                <div><button type=\"submit\">add</button></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport ReactDOM from 'react-dom'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newInput, setNewInput] = useState('')\n  //const [showAll, setShowAll] = useState(true)\n  const [message, setMessage] = useState('')\n  const [colorToggle, setColorToggle] = useState(true)\n\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n      .catch(error => {\n        setColorToggle(false)\n        setMessage(error.response.data)\n        setTimeout(() => {\n          setMessage(null)\n        }, 10000)\n        console.log(error.response.data)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} colorToggle={colorToggle} setColorToggle={setColorToggle} />\n      <Filter value={newInput} setter={setNewInput} />\n      <h3>add a new</h3>\n      <PersonForm persons={persons} newName={newName} newNumber={newNumber} personsSetter={setPersons} nameSetter={setNewName} numberSetter={setNewNumber} setMessage={setMessage} setColorToggle={setColorToggle} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} newInput={newInput} setPersons={setPersons} setMessage={setMessage} setColorToggle={setColorToggle} />\n    </div>\n  )\n}\nconst Notification = ({ message, colorToggle, setColorToggle }) => {\n  const messageStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  const errorStyle = {\n    ...messageStyle,\n    color: 'red'\n  }\n\n  if (message === null) {\n    return null\n  }\n  if (colorToggle === false) {\n    console.log(\"yes is false\")\n    return (\n      <div style={errorStyle}>\n        {message}\n      </div>\n    )\n  }\n  else {\n    return (\n      <div style={messageStyle}>\n        {message}\n      </div>\n    )\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}